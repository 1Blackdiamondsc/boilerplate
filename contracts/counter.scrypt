import "util.scrypt";

contract Counter {
	public function increment(bytes txPreimage, int amount) {
        require(Tx.checkPreimage(txPreimage));

        bytes scriptCode = Util.scriptCode(txPreimage);
		int scriptLen = length(scriptCode);
		
		// state (i.e., counter value) is at the end
		int counter = unpack(scriptCode[scriptLen - Util.ByteLen :]);
		// increment counter
		bytes scriptCode_ = scriptCode[: scriptLen - Util.ByteLen] + num2bin(counter + 1, Util.ByteLen);
		bytes hashOutputs = Util.hashOutputs(txPreimage);
		// output: amount + scriptlen + script
		Sha256 hashOutputs_ = hash256(num2bin(amount, 8) + Util.writeVarint(scriptCode_));
		// ensure output is expected: amount is same with specified
		// also output script is the same with scriptCode except counter incremented
		require(hashOutputs == hashOutputs_);
    }
}