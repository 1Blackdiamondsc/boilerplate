import "util.scrypt";
import "serializer.scrypt";

contract Counter {
	public function increment(SigHashPreimage txPreimage, int amount) {
        require(Tx.checkPreimage(txPreimage));

        bytes scriptCode = Util.scriptCode(txPreimage);
		int scriptLen = len(scriptCode);

		// code + opreturn + state + len
		int LEN = 2;
		bytes lb = scriptCode[scriptLen - LEN :];
		Serializer s = new Serializer(lb);
		int l = s.deserializeInt();
		// require(l == 4);
		
		bytes state = scriptCode[scriptLen - l :];
		Serializer s_ = new Serializer(state);
		int counter = s_.deserializeInt();
		// require(counter == 6);
		
		// increment counter
		bytes counterB = Serializer.serializeInt(counter + 1);
		bytes scriptCode_ = scriptCode[: scriptLen - l] + counterB + lb;
		bytes output = Util.buildOutput(scriptCode_, amount);
		// ensure output is expected: amount is same with specified
		// also output script is the same with scriptCode except counter incremented
		require(hash256(output) == Util.hashOutputs(txPreimage));
    }
}