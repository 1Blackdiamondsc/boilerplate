import "util.scrypt";

/**
* A toy token sale
*/
contract TokenSale {
    // satoshis / token
    int price;

	constructor(int price) {
		this.price = price;
	}

    public function buy(PubKey buyer, int numTokens, bytes txPreimage) {
        // this ensures the preimage is for the current tx
        require(Tx.checkPreimage(txPreimage));

        // read previous locking script
        bytes lockingScript = Util.scriptCode(txPreimage);
        int scriptLen = length(lockingScript);
        int oldBalance = Util.value(txPreimage);
        int newBalance = oldBalance + numTokens * this.price;

        // write new locking script
        bytes lockingScript_ = lockingScript + b'22' /* "OP_PUSHDATA0" */ + buyer + num2bin(numTokens, 1);
        bytes hashOutputs = Util.hashOutputs(txPreimage);
        Sha256 hashOutputs_ = hash256(num2bin(newBalance, 8) + Util.writeVarint(lockingScript_));
        require(hashOutputs == hashOutputs_);
    }
}